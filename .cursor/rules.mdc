---
description: 나오미 퍼즐 게임 개발을 위한 전체 프로젝트 규칙
globs: ["**/*"]
alwaysApply: true
---

# 나오미 퍼즐 게임 개발 규칙

## 🎯 프로젝트 개요
- **프로젝트명**: 나오미 퍼즐 게임 🐱
- **기술 스택**: HTML5 + CSS3 + JavaScript + Jest
- **개발 방식**: TDD (Test-Driven Development)

## 📋 개발 원칙

### 1. TDD 사이클 준수
- **Red**: 실패하는 테스트 코드 먼저 작성
- **Green**: 테스트를 통과하는 최소한의 코드 작성
- **Refactor**: 코드 개선 및 최적화

### 2. 단계별 개발
- 절대 한꺼번에 진행하지 마
- 한 번에 하나의 기능만 구현
- 각 단계 완료 후 다음 단계로 진행

### 3. 테스트 우선
- 모든 기능에 대해 테스트 코드 먼저 작성
- Mock 객체 활용한 격리된 테스트
- 경계값 테스트 (edge cases) 포함

### 4. 커밋 및 푸시
- README.md 지속적 업데이트
- 각 단계별 마무리가 되면 README.md 업데이트 
- 각 단계별 마무리가 되고 README.md 업데이트 완료후 반드시 커밋과 푸시
- 커밋 메시지는 명확하고 구체적으로 작성

## 코딩 규칙

### JavaScript 코드 스타일
- ES6+ 문법 사용
- 함수/클래스명은 명확하고 설명적
- 주석은 한국어로 작성
- JSDoc 활용

### 테스트 코드 규칙
- 테스트 함수명: `test_기능명_상황_예상결과`
- 각 테스트는 독립적으로 실행 가능
- Mock 객체로 외부 의존성 제거

### Git 커밋 및 푸시 규칙
```
feat: 새로운 기능 추가
fix: 버그 수정
test: 테스트 코드 추가/수정
refactor: 코드 리팩토링
docs: 문서 업데이트
```

**커밋 후 푸시 절차:**
1. `git add .` - 모든 변경사항 스테이징
2. `git commit -m "커밋 메시지"` - 변경사항 커밋
3. `git push` - 원격 저장소에 푸시
4. 각 단계 완료 시 반드시 실행

## 🚫 금지 사항
- 테스트 없이 코드 작성 금지
- 한 번에 여러 기능 구현 금지
- 커밋 없이 다음 단계 진행 금지
- README.md 업데이트 누락 금지

## ✅ 완료 조건
- [ ] 모든 테스트 통과
- [ ] 코드 리뷰 완료
- [ ] Git 커밋 및 푸시
- [ ] README.md 업데이트
- [ ] 다음 단계 계획 수립

## 📋 단계별 계획 (의사코드)

```
1. 프로젝트 초기 설정
   - HTML 기본 구조 생성
   - CSS 스타일링 기본 설정
   - JavaScript 모듈 구조 설정
   - Jest 테스트 환경 구성

2. 보드 생성 기능
   - 9×9 격자 보드 생성
   - 블록 색상 및 타입 정의
   - 초기 블록 배치 로직
   - 보드 생성 테스트 작성

3. 블록 이동 기능
   - 블록 선택 및 교환 로직
   - 유효한 이동 검증
   - 매칭 실패 시 원위치 복귀
   - 블록 이동 테스트 작성

4. 매칭 및 제거 기능
   - 가로/세로 3개 이상 매칭 검사
   - 매칭된 블록 제거 로직
   - 특수 아이템 생성 로직
   - 매칭 시스템 테스트 작성

5. 중력 효과 기능
   - 빈 공간 채우기 로직
   - 블록 낙하 애니메이션
   - 연쇄 매칭 처리
   - 중력 효과 테스트 작성

6. 고양이 구출 기능
   - 고양이 캐릭터 배치
   - 주변 블록 제거 시 구출 로직
   - 구출 애니메이션 효과
   - 고양이 구출 테스트 작성

7. 게임 상태 관리
   - 점수 계산 시스템
   - 턴 제한 로직
   - 미션 완료 조건
   - 게임 종료 처리

8. UI/UX 완성
   - 터치 인터페이스 최적화
   - 시각적 피드백 효과
   - 반응형 디자인 적용
   - 사운드 효과 추가

9. 최종 테스트 및 배포
   - 전체 기능 통합 테스트
   - 성능 최적화
   - 문서화 완성
   - 배포 준비
```



